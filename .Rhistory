multiplayerCareers()
dreamteam <- multiplayerCareers()
dreamteam
multiplayerCareers()
duck <- careerStats("duckwke01")
duck
careerStats("johnsea01")
careerStats("johnser01")
careerStats("johnsma02")
help("comparison")
duck
head(duck, 3)
comparison2 <- function(numPlayers, playerVector) {
# get desired number of players
allData <- pmain
for (i in 1:numPlayers) {
playerID <- playerVector[i]
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
tryit <- comparison2(2, c("ewingpa01", "malonka01"))
career <- function(playerID) {
playerURL <- paste("http://www.basketball-reference.com/players/",
substr(playerID, 1, 1), "/", playerID, ".html", sep="")
roughData <- importData(playerURL)
tidyData <- makeTidyDF(roughData, playerID)
playerData <- rbind(pmain, tidyData)
playerData[,2] <- as.numeric(substr(playerData[,2], 1, 4)) + 1
return (playerData)
}
comparison <- function() {
# get desired number of players
pquant <- readline(prompt="Enter number of players to compare: ")
allData <- pmain
for (i in 1:pquant) {
playerID <- readline(prompt="Enter player code: ") # prompt for the player code(s)
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
tryit <- comparison2(2, c("ewingpa01", "malonka01"))
tryit
myguys <- c("jamesle01", "wadedw01", "boshch01")
comparison2(3, myguys)
# Wilt, Russell, Shaq, Kareem, Olajuwon
centers <- comparison2(5, c('chambwi01', 'russebi01', 'olajuha01',
'onealsh01', 'abdulka01'))
career('chambwi01')
career('russebi01')
career('olajuha01')
career('abdulka01')
career('alcinle01')
career('jabbaka01')
career('abdulka01')
source('~/PCC/fall16/cis121/R Project/nba_data.r')
rm(centers)
rm(barkley)
rm(dreamteam)
rm(drob2426)
rm(ewing2426)
rm(duck)
rm(pettit)
head(players)
nrow(players)
players
rm(players)
rm(pmain)
rm(wilt)
rm(sabas1, sabas2)
rm(steph)
rm(careerStats)
source('~/PCC/fall16/cis121/R Project/nba_data.r')
career("abdulka01")
career("malonka01")
# Wilt, Russell, Shaq, Olajuwon
# Kareem's page was down so I didn't include him.
centers <- comparison2(4, c('chambwi01', 'russebi01', 'olajuha01',
'onealsh01'))
centers
names(centers)
centers$games
sort(centers$games)
centers[centers$games==12, ]
help("dplyr")
browseVignettes('dplyr')
help(dtx)
dtx <- select(centers, namecol, age, games, min)
dtx
summary(centers[centers$namecol=='chambwi01', ])
summary(dtx)
ggplot(dtx, aes(age, min, col=namecol)) + geom_bar()
ggplot(dtx, aes(factor(namecol)))
g <- ggplot(dtx, aes(factor(namecol)))
g + geom_bar()
centers[centers$namecol=="onealsh01", ]
career("mchalke01")
comparison2(2, c("mchalke01", "worthja01"))
sidekicks <- comparison2(2, c("mchalke01", "worthja01"))
head(sidekicks[sidekicks$namecol=='mchalke01', ], 4)
head(sidekicks[sidekicks$namecol=='worthja01', ], 4)
library(XML)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
pHeader=c("seas", "age", "team", "leag", "pos", "games", "strt",
"min", "fg", "fga", "fgp", "tp", "tpa", "tpp", "duo",
"duoa", "duop", "efg", "ft", "fta", "ftp", "orb", "drb", "trb",
"ast", "stl", "blk", "tov", "pf", "pts")
pClasses=c("character", "numeric", rep("character", 3),
rep("numeric", 25))
pmain <- data.frame(namecol=character(), seas=character(), age=numeric(),
team=character(), leag=character(), pos=character(),
games=numeric(), strt=numeric(),min=numeric(), fg=numeric(),
fga=numeric(), fgp=numeric(), tp=numeric(), tpa=numeric(),
tpp=numeric(), duo=numeric(), duoa=numeric(), duop=numeric(),
efg=numeric(), ft=numeric(), fta=numeric(), ftp=numeric(),
orb=numeric(), drb=numeric(), trb=numeric(), ast=numeric(),
stl=numeric(), blk=numeric(), tov=numeric(), pf=numeric(),
pts=numeric())
importData <- function(purl) {
pdoc <- htmlParse(purl)
pnode <- getNodeSet (pdoc, "//table")
pdata <- readHTMLTable(pnode[[1]], header=pHeader, colClasses=pClasses)
return(pdata)
}
# create a NameID column for player in question
makeTidyDF <- function(data, NAME) {
num <- nrow(data)
namecol <- rep(NAME, num)
tidydf <- cbind(namecol, data)
return(tidydf)
}
# get career season stats for one player
career <- function(playerID) {
playerURL <- paste("http://www.basketball-reference.com/players/",
substr(playerID, 1, 1), "/", playerID, ".html", sep="")
roughData <- importData(playerURL)
tidyData <- makeTidyDF(roughData, playerID)
playerData <- rbind(pmain, tidyData)
playerData[,2] <- as.numeric(substr(playerData[,2], 1, 4)) + 1
return (playerData)
}
comparison <- function() {
# get desired number of players
pquant <- readline(prompt="Enter number of players to compare: ")
allData <- pmain
for (i in 1:pquant) {
playerID <- readline(prompt="Enter player code: ") # prompt for the player code(s)
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
comparison2 <- function(numPlayers, playerVector) {
allData <- pmain
for (i in 1:numPlayers) {
playerID <- playerVector[i]
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
duck <- career("duckwke01")
duck
head(duck, 3)
# Wilt, Russell, Shaq, Olajuwon
# Kareem's page was down so I didn't include him.
centers <- comparison2(4, c('chambwi01', 'russebi01', 'olajuha01',
'onealsh01'))
centers
sidekicks <- comparison2(2, c("mchalke01", "worthja01"))
head(sidekicks[sidekicks$namecol=='mchalke01', ], 4)
head(sidekicks[sidekicks$namecol=='worthja01', ], 4)
hist(cars$dist, data=cars, main="Probability Density of Stopping Distances",
xlab="Stopping Distance (ft)",
breaks=5,
border="seagreen3", density=30,
col="limegreen",
freq=FALSE)
hist(cars$speed, data=cars, main="Probability Density of Speed",
xlab="Speed (mph)",
breaks=5,
border="violet", density=30,
col="lightpink",
freq=TRUE)
getwd()
list.dirs()
list.files()
library(pandoc)
beavers
beaver1
table_df(beaver1)
library(dplyr)
table_df(beaver1)
tbl_df(beaver1)
sidekicks
library(rmarkdown)
render("nbaData.Rmd", beamer_presentation())
render("nbaData.Rmd", beamer_presentation())
sidekicks <- comparison2(2, c("mchalke01", "worthja01"))
library(XML)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
pHeader=c("seas", "age", "team", "leag", "pos", "games", "strt",
"min", "fg", "fga", "fgp", "tp", "tpa", "tpp", "duo",
"duoa", "duop", "efg", "ft", "fta", "ftp", "orb", "drb", "trb",
"ast", "stl", "blk", "tov", "pf", "pts")
pClasses=c("character", "numeric", rep("character", 3),
rep("numeric", 25))
pmain <- data.frame(namecol=character(), seas=character(), age=numeric(),
team=character(), leag=character(), pos=character(),
games=numeric(), strt=numeric(),min=numeric(), fg=numeric(),
fga=numeric(), fgp=numeric(), tp=numeric(), tpa=numeric(),
tpp=numeric(), duo=numeric(), duoa=numeric(), duop=numeric(),
efg=numeric(), ft=numeric(), fta=numeric(), ftp=numeric(),
orb=numeric(), drb=numeric(), trb=numeric(), ast=numeric(),
stl=numeric(), blk=numeric(), tov=numeric(), pf=numeric(),
pts=numeric())
importData <- function(purl) {
pdoc <- htmlParse(purl)
pnode <- getNodeSet (pdoc, "//table")
pdata <- readHTMLTable(pnode[[1]], header=pHeader, colClasses=pClasses)
return(pdata)
}
# create a NameID column for player in question
makeTidyDF <- function(data, NAME) {
num <- nrow(data)
namecol <- rep(NAME, num)
tidydf <- cbind(namecol, data)
return(tidydf)
}
# get career season stats for one player
career <- function(playerID) {
playerURL <- paste("http://www.basketball-reference.com/players/",
substr(playerID, 1, 1), "/", playerID, ".html", sep="")
roughData <- importData(playerURL)
tidyData <- makeTidyDF(roughData, playerID)
playerData <- rbind(pmain, tidyData)
playerData[,2] <- as.numeric(substr(playerData[,2], 1, 4)) + 1
return (playerData)
}
comparison <- function() {
# get desired number of players
pquant <- readline(prompt="Enter number of players to compare: ")
allData <- pmain
for (i in 1:pquant) {
playerID <- readline(prompt="Enter player code: ") # prompt for the player code(s)
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
comparison2 <- function(numPlayers, playerVector) {
allData <- pmain
for (i in 1:numPlayers) {
playerID <- playerVector[i]
allData <- rbind(allData, career(playerID))
}
allData[,2] <- as.numeric(substr(allData[,2], 1, 4)) + 1
return(allData)
}
duck <- career("duckwke01")
tbl_df(duck)
duck[c(1:3), c(1:4)]
# Wilt, Russell, Shaq, Olajuwon
# Kareem's page was down so I didn't include him.
centers <- comparison2(4, c("chambwi01", "russebi01", "olajuha01",
"onealsh01"))
tbl_df(centers)
sidekicks <- comparison2(2, c("mchalke01", "worthja01"))
head(sidekicks[sidekicks$namecol=="mchalke01", ], 4)
head(sidekicks[sidekicks$namecol=="worthja01", ], 4)
knitr::opts_chunk$set(echo = TRUE)
source('~/Projects/R_projects/mtcars_EDA.r')
setwd('~/Projects/cis121-presentation')
setwd('~/Projects')
setwd('~/Projects/cis121-presentation')
setwd('~/Projects/R_projects')
hunger <- read.csv('hunger.csv')
head(hunger)
nrow(hunger)
str(hunger)
range(hunger$Low)
range(hunger$High)
range(hunger$Numeric)
hunger$Numeric == hunger$Display.Value
getwd()
setwd("/Users/tinasky/Projects/cis121-presentation")
source('~/Projects/cis121-presentation/blazerdata.r')
source('~/Projects/cis121-presentation/blazerdata.r')
ggplot(blz) + geom_bar(aes(x=age), fill = 'steelblue') # age, for example
ggplot(blz) + geom_bar(aes(x=age), fill = 'steelblue') +
ggtitle("Blazers Age Distribution\n2012 - 2016")
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85, fill='lightgreen')
colors()
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85,
color='cornflowerblue', fill='lightgreen')
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85,
color='cornflowerblue', fill='thistle1')
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85,
color='cornflowerblue', fill='wheat4')
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85,
color='cornflowerblue', fill='wheat1')
ggplot(blz) + geom_histogram(aes(x=trb), binwidth=.85,
color='wheat4', fill='wheat1')
ggplot(blz) +
geom_histogram(aes(x=trb),
binwidth=.85,
color='wheat4',
fill='wheat1') +
ggtitle("Distribution of Rebounding Averages\nBlazers 2012 - 2016") +
theme_light()
ggplot(blz) + geom_bar(aes(x=age), fill = 'steelblue') +
ggtitle("Blazers Age Distribution\n2012 - 2016")
ggplot(blz) + geom_bar(aes(x=age), fill = 'steelblue') +
ggtitle("Blazers Age Distribution\n2012 - 2016") +
theme_light()
ggplot(blz) +
geom_bar(aes(x=pname), fill='wheat2') +
coord_flip() +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname), fill='wheat2') +
coord_flip() +
theme_light(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
fill='yellowgreen') +
coord_flip() +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle()
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle()
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016")
theme(axis.text.y=element_text(size=rel(0.8)))
summary(playerdf)
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4'
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4'
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
dev.off()
source('~/Projects/cis121-presentation/blazerdata.r')
pairs(mtcars, main="mtcars data")
ggplot(blz) + geom_bar(aes(x=age), fill = 'steelblue') +
ggtitle("Blazers Age Distribution\n2012 - 2016") +
theme_light()
ggplot(blz) +
geom_bar(aes(x=age),
color='wheat4',
fill='wheat1') +
ggtitle("Blazers Age Distribution\n2012 - 2016") +
theme_light()
ggplot(blz) +
geom_histogram(aes(x=trb),
binwidth=.85,
color='wheat4',
fill='wheat1') +
ggtitle("Distribution of Rebounding Averages\nBlazers 2012 - 2016") +
theme_light()
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme_light(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
xlab("Seasons") +
ylab("Player")
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
xlab("Seasons") +
ylab("Player") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
xlab("Seasons") +
ylab("Player") +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
dev.off()
ggplot(blz) +
geom_bar(aes(x=age),
color='wheat4',
fill='wheat1') +
ggtitle("Blazers Age Distribution\n2012 - 2016") +
theme_light()
ggplot(blz) +
geom_histogram(aes(x=trb),
binwidth=.85,
color='wheat4',
fill='wheat1') +
ggtitle("Distribution of Rebounding Averages\nBlazers 2012 - 2016") +
theme_light()
ggplot(blz) +
geom_bar(aes(x=pname),
color='wheat4',
fill='wheat1') +
coord_flip() +
xlab("Seasons") +
ylab("Player") +
ggtitle("Blazers Players by Length of Tenure\n2012 - 2016") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(playerdf) +
geom_bar(aes(x=pname, y=count),
stat='identity',
color='wheat4',
fill='wheat1') +
coord_flip() +
ggtitle("Blazers Players by Length of Tenure\n 2012 - 2016") +
xlab("Seasons") +
ylab("Player") +
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge", stat="identity")
source('~/Projects/cis121-presentation/visualizations.r')
install.packages("gcookbook")
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge", stat="identity")
library(gcookbook) # data set
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge", stat="identity")
ggplot(diamonds, aes(x=cut)) +
geom_bar()
upc <- subset(uspopchange, rank(Change) > 40)
ggplot(upc, aes(x=Abb, y=Change, fill=Region)) +
geom_bar(stat="identity")
ggplot(heightweight, aes(x=ageYear, y=heightIn,
size=weightLb, color=sex)) +
geom_point(alpha=0.5) +
scale_size_area() + # make area proportional to numeric value
scale_color_brewer(palette="Set1")
